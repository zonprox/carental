services:
  db:
    image: postgres:16-alpine
    profiles: ["dev", "prod", "ci"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pern_demo
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: infra/docker/server.Dockerfile
    profiles: ["prod"]
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@db:5432/pern_demo?schema=public
      JWT_SECRET: ${JWT_SECRET:-change_me_in_production}
      APP_URL: ${APP_URL:-http://localhost:5173}
      SERVER_PORT: 4000
      CLIENT_PORT: 5173
    command: >
      sh -c "
      npm --prefix server run prisma:generate &&
      npm --prefix server run migrate &&
      node server/scripts/ensure-setup-flag.js
      "
    restart: "no"

  server:
    build:
      context: .
      dockerfile: infra/docker/server.Dockerfile
    image: ${USE_GHCR:+ghcr.io/zonprox/carental-server:latest}
    profiles: ["dev", "prod"]
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://postgres:postgres@db:5432/pern_demo?schema=public
      JWT_SECRET: ${JWT_SECRET:-change_me_in_production}
      APP_URL: ${APP_URL:-http://localhost:5173}
      SERVER_PORT: 4000
      CLIENT_PORT: 5173
    ports:
      - "${SERVER_PORT:-4000}:4000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: infra/docker/client.Dockerfile
    image: ${USE_GHCR:+ghcr.io/zonprox/carental-client:latest}
    profiles: ["dev"]
    depends_on:
      - server
    ports:
      - "${CLIENT_PORT:-5173}:80"
    restart: unless-stopped

volumes:
  pgdata:
